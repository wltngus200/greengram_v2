<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.green.greengram.feed.FeedMapper">

    <insert id="postFeed" keyProperty="feedId" useGeneratedKeys="true">
        INSERT INTO feed
        (writer_id, contents, location)
        VALUES
        (#{userId}, #{contents}, #{location})
    </insert>

    <insert id="postFeedPics">
        INSERT INTO feed_pics
        (feed_id, pic)
        VALUES
        <foreach item="a" collection="fileNames" separator=",">
            (#{feedId}, #{a})
        </foreach>
        <!--item아니고 pic으로 하면??-->
    </insert>

    <select id="getFeed">
        SELECT A.feed_id AS feedId, A.writer_id AS writerId, B.nm AS writerNm,
        B.pic AS writerPic, A.contents, A.location, A.created_at AS createdAt, IF(C.feed_id IS NULL, 0, 1) AS isFav
                                                                            <!--id가 없으면 좋아요를 누르지 않은 것3항식-->
        FROM feed A
        INNER JOIN user B
        ON A.writer_id=B.user_id
        LEFT JOIN feed_favorite C<!--Inner일 경우 새로운 건 볼 수 없고 내가 좋아요 누른 것 만 나옴-->
        ON A.feed_id=C.feed_id AND c.user_id=#{signedUserId}
        <!--좋아요의 여부를 표시하는 컬럼 추가-->
        <!--유저 아이디를 조인 조건으로 두지 않으면 전체 사용자가 좋아요 누른 것-->
        ORDER BY A.feed_id DESC
        LIMIT #{startNum}, #{size}
    </select>

    <select id="getFeedPicsByFeedId">
        SELECT pic
        FROM feed_pics
        WHERE feed_id=#{feedId}
    </select>

    <select id="getFeedCommentTopBy4ByFeedId">
        SELECT A.feed_comment_id AS feedCommentId, A.created_at AS createdAt, A.comment,
                B.user_id AS writerId, B.nm AS writerNm, B.pic AS writerPic
        FROM feed_comment A
        INNER JOIN user B
        ON A.user_id=B.user_id
        WHERE A.feed_id=#{feedId}
        ORDER BY A.created_at
        LIMIT 4
    </select>
</mapper>